{"version":3,"sources":["enums/index.ts","reducers/userReducer.ts","style/theme/theme.ts","constexts/userContext.tsx","reducers/transactionsReducer.ts","constexts/transactionsContext.tsx","reducers/currencyReducer.ts","constexts/currencyContext.tsx","helpers/Pagination.tsx","components/atoms/Typography/Typography.tsx","components/molecules/TransactionCard/TransactionCard.tsx","components/organisms/TransactionsList/TransactionsList.tsx","helpers/SortAndFilter.ts","views/pages/Transactions/Transactions.tsx","views/pages/Cards/Cards.tsx","constants/charts/PolarChart/PolarChart.tsx","constants/PieChart/PieChart.tsx","views/pages/Charts/Charts.tsx","services/budgetServiceApi.ts","constants/NavGroup.ts","components/molecules/ListItem/ListItem.tsx","components/atoms/Icon/Icon.tsx","components/organisms/NavList/NavList.tsx","components/molecules/CurrentBalance/CurrentBalance.tsx","components/molecules/CurrencyRow/CurrencyRow.tsx","components/organisms/NavBar/NavBar.tsx","components/molecules/BriefCard/BriefCard.tsx","assets/images/CreditCardBackground.png","components/molecules/CreditCard/CreditCard.tsx","helpers/mathFuncs.ts","constants/charts/IncomeChart/IncomeChart.tsx","components/molecules/IncomeChart/IncomeChart.tsx","constants/charts/ActivityChart/ActivityChart.tsx","components/molecules/ActivityChart/ActivityChart.tsx","views/pages/Dashboard/Dashboard.tsx","components/atoms/Avatar/Avatar.tsx","components/molecules/UserDetails/UserDetails.tsx","helpers/designFuncs.ts","constants/PayGroup.ts","components/molecules/ListItemText/ListItemText.tsx","components/organisms/PaymentList/PaymentList.tsx","components/organisms/PaymentBar/PaymentBar.tsx","views/pages/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["CHARTS_NAMES","ACTIONS","NAV_GROUPE_LABEL","NAV_GROUPE_ROUTE","PAYMENT_METHOD","PAYMENT_METHOD_TEXT","IconSize","AvatarSize","TransactionsFileds","fontSize","userReducer","state","action","type","GET_USER_BY_ID","user","payload","initialState","firstName","lastName","email","password","avatar","currentBalance","currentBalanceCurrency","creditCard","last4Digits","expMonth","expYear","setUser","UserContext","createContext","UserContextProvider","children","useReducer","dispatch","Provider","value","transactionsReducer","GET_LATEST_TRANSACTIONS","transactions","currencyRate","setCurrencyRates","selectedCurrency","setSelectedCurrency","setTransactions","TransactionsContext","TransactionsContextProvider","CurrencyReducer","GET_CURRENCY","GET_CURRENCY_RATE","currencyRates","CurrencyContext","CurrencyContextProvider","SButtonList","styled","ul","Paginataion","totalTransactions","transactionsPerPage","paginate","pageNumbers","i","Math","ceil","push","map","number","onClick","colors","default","purple","blue","dark","medium","lightblue","black","grey","primary","pink","secondery","light","white","whiteSmoke","red","breakPoints","STypography","label","size","heading1","heading2","heading3","caption","subtitle","subtitle2","setfontSize","fontsize","color","bold","Typography","STransactionCardContainer","div","SDetailsWrapper","STitleWrapper","TransactionCard","paymentType","paymentMethod","cancelled","time","date","currency","category","company","amount","location","country","TransactionsListWrapper","TransactionsList","options","displayName","STransactionsPageContainer","SSelect","select","SFiltersWrapper","Transactions","useContext","useState","sorted","setSorted","filterByAmount","setFilterByAmount","tempTransactions","currentPage","setCurrentPage","indexOfLastTransactions","indexOfFirstTransactions","currentTrasactions","slice","defaultValue","onChange","e","sortTrnsactions","key","sort","a","b","valueA","valueB","target","disabled","filteredTransactions","filter","min","max","step","Pagination","pageNumber","length","Cards","PolarChart","PolarChartObj","series","chart","stroke","fill","opacity","responsive","breakpoint","width","legend","position","id","PieChart","chartData","reduce","preValue","currentValue","previous","index","findIndex","item","console","log","PieChartObj","labels","SChartsPageContainer","SPieChartBox","SPolarChartBox","Charts","axiosInstance","axios","create","baseURL","process","getCurrency","currencyCode","get","currencies","data","error","message","Error","createUser","userPayload","post","msg","getUser","updateUser","put","deleteUser","delete","getAllTransactions","getLatestTransactionsByLimit","limit","updateTransaction","transactionPayload","deleteTransaction","createTransaction","navGroup","icon","faThLarge","DASHBOARD","route","faExchangeAlt","TRANSACTIONS","faChartPie","CHARTS","faCreditCard","CARDS","faUser","USER_PROFILE","ListItemWrapper","li","ListItem","SIcon","Xlarge","large","small","setSize","backgroundColor","Icon","NavListWrapper","NavList","to","SCurrentBalanceWrapper","SCaptionWrapper","CurrentBalance","CurrencyRow","Object","keys","option","SNavBarWrapper","isShow","SmenuIconWrapper","NavBar","setIsShow","faBars","SBriefCardContainer","SRevenueWrapper","SProfitBox","SProfitCaptionWrapper","SMenuIconWrapper","SCardIconWrapper","BriefCard","title","profit","revenue","faEllipsisH","SCreditCardContainer","CreditCardBackground","SDigitsWrapper","SCardHolderWrapper","SCardExpDateWrapper","SCardDataBox","CreditCard","getTotalAmountPerMonthByType","dateObj","forEach","transaction","Date","toLocaleString","month","entries","x","y","getAverage","total","toFixed","IncomeChart","chartObj","name","height","zoom","enabled","dataLabels","curve","text","align","grid","row","SIncomeChartWrapper","ActivityChart","incomesData","expensesData","Income","Expenses","plotOptions","bar","horizontal","columnWidth","endingShape","show","tooltip","formatter","function","val","SActivityChartWrapper","SMainContainer","SFlexWrapper","Dashboard","incomes","t","expenses","faArchive","faChartLine","SAvatar","img","xl","lg","md","sm","xs","setAvatarSize","Avatar","src","alt","SUserDetailsContainer","UserDetails","getAmountColor","getAmountSymbol","getDateFormat","toLocaleDateString","getStyleByPaymentMethod","ATM","faCheck","CANCELLED","faTimes","CYCLE","faSyncAlt","REFUND","faReply","PAYPAL","faPaypal","SListItemTextWrapper","ListItemText","PaymentListWrapper","SIconWrapper","iconBackground","PaymentList","fontweight","SPaymentBarContainer","PaymentBar","SHomePageContainer","HomePage","useEffect","BudgetServiceApi","transactionsData","userData","fetchData","currenciesData","conversion_rates","path","component","exact","transactionsList","App","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.d19af6ac.chunk.js","sourcesContent":["export enum CHARTS_NAMES {\r\n  Income = 'Income',\r\n  Expenses = 'Expenses',\r\n}\r\n\r\nexport enum ACTIONS {\r\n  GET_LATEST_TRANSACTIONS = 'GET_LATEST_TRANSACTIONS',\r\n  GET_USER_BY_ID = 'GET_USER_BY_ID',\r\n  GET_CURRENCY = 'GET_CURRENCY',\r\n  GET_CURRENCY_RATE = 'GET_CURRENCY_RATE',\r\n}\r\n\r\nexport enum NAV_GROUPE_LABEL {\r\n  DASHBOARD = 'Dashboard',\r\n  TRANSACTIONS = 'Transactions',\r\n  CHARTS = 'Charts',\r\n  CARDS = 'Cards',\r\n  USER_PROFILE = 'User Profile',\r\n}\r\nexport enum NAV_GROUPE_ROUTE {\r\n  DASHBOARD = '/',\r\n  TRANSACTIONS = '/transactions',\r\n  CHARTS = '/charts',\r\n  CARDS = '/cards',\r\n  USER_PROFILE = '/profile',\r\n}\r\n\r\nexport enum PAYMENT_METHOD {\r\n  PAYPAL = 'paypal',\r\n  ATM = 'ATM',\r\n  CANCELLED = 'Cancelled',\r\n  CYCLE = 'cycle',\r\n  REFUND = 'refund',\r\n}\r\n\r\nexport enum PAYMENT_METHOD_TEXT {\r\n  PAYPAL = 'Deposit from PayPal',\r\n  ATM = 'Deposit from ATM',\r\n  CANCELLED = 'Cancelled',\r\n  CYCLE = 'Deposit from ATL',\r\n  REFUND = 'Refund',\r\n}\r\n\r\nexport enum IconSize {\r\n  Xlarge = 'Xlarge',\r\n  large = 'large',\r\n  medium = 'medium',\r\n  small = 'small',\r\n}\r\n\r\nexport enum AvatarSize {\r\n  xl = 'xl',\r\n  lg = 'lg',\r\n  md = 'md',\r\n  sm = 'sm',\r\n  xs = 'xs',\r\n}\r\n\r\nexport enum TransactionsFileds {\r\n  paymentType = 'paymentType',\r\n  paymentMethod = 'paymentMethod',\r\n  amount = 'amount',\r\n  time = 'time',\r\n  date = 'date',\r\n  currency = 'currency',\r\n}\r\n","import { IUserState, IAction } from '../models/index';\r\nimport { ACTIONS } from '../enums/index';\r\n\r\nconst userReducer = (state: IUserState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ACTIONS.GET_USER_BY_ID:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","export const colors = {\r\n  default: 'white',\r\n  purple: '#8a7be5',\r\n  blue: {\r\n    dark: '#4333A0',\r\n    medium: '#1ba9e7',\r\n    lightblue: '#62CCF7',\r\n  },\r\n  black: 'black',\r\n  grey: {\r\n    primary: 'grey',\r\n  },\r\n  pink: {\r\n    primary: '#FF8788',\r\n    secondery: '#fcedd8',\r\n    dark: '#f18374',\r\n    light: '#F2C2BE',\r\n  },\r\n  white: {\r\n    medium: 'rgba(255, 255, 255, 0.3)',\r\n    light: 'rgba(0,0,0,0.1)',\r\n    whiteSmoke: '#f3f3f3',\r\n  },\r\n  red: '#f18374',\r\n};\r\nexport const breakPoints = {\r\n  mobile: '320px',\r\n  tablet: '600',\r\n  laptop: '847px',\r\n  desktop: '1087px',\r\n  XLScreen: '1360px',\r\n};\r\n\r\nexport enum fontSize {\r\n  heading1 = 'heading1',\r\n  heading2 = 'heading2',\r\n  heading3 = 'heading3',\r\n  caption = 'caption',\r\n  subtitle = 'subtitle',\r\n  subtitle2 = 'subtitle2',\r\n}\r\n\r\n// export type fontSize = {\r\n//   heading1: string;\r\n//   heading2: string;\r\n//   heading3: string;\r\n//   caption: string;\r\n//   subtitle: string;\r\n//   subtitle2: string;\r\n// };\r\n","import React, { useReducer, createContext } from 'react';\r\nimport { IUser, IUserState } from '../models/index';\r\nimport { ACTIONS } from '../enums/index';\r\nimport userReducer from '../reducers/userReducer';\r\n\r\nconst initialState = {\r\n  user: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    avatar: '',\r\n    currentBalance: '',\r\n    currentBalanceCurrency: '',\r\n    creditCard: [\r\n      {\r\n        firstName: '',\r\n        lastName: '',\r\n        last4Digits: 0,\r\n        expMonth: 0,\r\n        expYear: 0,\r\n      },\r\n    ],\r\n  },\r\n  setUser: () => {},\r\n};\r\n\r\nexport const UserContext = createContext<IUserState>(initialState);\r\n\r\nconst UserContextProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  const setUser = (user: IUser) => {\r\n    dispatch({ type: ACTIONS.GET_USER_BY_ID, payload: user });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        ...state,\r\n        setUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","import { ITransactionsState, IAction } from '../models/index';\r\nimport { ACTIONS } from '../enums/index';\r\n\r\nconst transactionsReducer = (state: ITransactionsState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ACTIONS.GET_LATEST_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        transactions: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default transactionsReducer;\r\n","import React, { useReducer, createContext } from 'react';\r\nimport { ITransaction, ITransactionsState } from '../models/index';\r\nimport transactionsReducer from '../reducers/transactionsReducer';\r\nimport { ACTIONS } from '../enums/index';\r\n\r\nconst initialState = {\r\n  currencyRate: {},\r\n  setCurrencyRates: () => {},\r\n  selectedCurrency: 'USD',\r\n  setSelectedCurrency: () => {},\r\n  transactions: [],\r\n  setTransactions: () => {},\r\n};\r\n\r\nexport const TransactionsContext = createContext<ITransactionsState>(initialState);\r\n\r\nconst TransactionsContextProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(transactionsReducer, initialState);\r\n\r\n  const setTransactions = (transactions: ITransaction[]) => {\r\n    dispatch({ type: ACTIONS.GET_LATEST_TRANSACTIONS, payload: transactions });\r\n  };\r\n  return (\r\n    <TransactionsContext.Provider\r\n      value={{\r\n        ...state,\r\n        setTransactions,\r\n      }}\r\n    >\r\n      {children}\r\n    </TransactionsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TransactionsContextProvider;\r\n","import { ICurrencyState, IAction } from '../models/index';\r\nimport { ACTIONS } from '../enums/index';\r\n\r\nconst CurrencyReducer = (state: ICurrencyState, action: IAction) => {\r\n  switch (action.type) {\r\n    case ACTIONS.GET_CURRENCY:\r\n      return {\r\n        ...state,\r\n        selectedCurrency: action.payload,\r\n      };\r\n\r\n    case ACTIONS.GET_CURRENCY_RATE:\r\n      return {\r\n        ...state,\r\n        currencyRates: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CurrencyReducer;\r\n","import React, { useReducer, createContext } from 'react';\r\nimport { ICurrencyState } from '../models/index';\r\nimport CurrencyReducer from '../reducers/currencyReducer';\r\nimport { ACTIONS } from '../enums/index';\r\n\r\nconst initialState = {\r\n  currencyRates: {},\r\n  setCurrencyRates: () => {},\r\n  selectedCurrency: 'USD',\r\n  setSelectedCurrency: () => {},\r\n};\r\n\r\nexport const CurrencyContext = createContext<ICurrencyState>(initialState);\r\n\r\nconst CurrencyContextProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(CurrencyReducer, initialState);\r\n\r\n  const setSelectedCurrency = (selectedCurrency: string) => {\r\n    dispatch({ type: ACTIONS.GET_CURRENCY, payload: selectedCurrency });\r\n  };\r\n  const setCurrencyRates = (currencyRate: object) => {\r\n    dispatch({ type: ACTIONS.GET_CURRENCY_RATE, payload: currencyRate });\r\n  };\r\n  return (\r\n    <CurrencyContext.Provider\r\n      value={{\r\n        ...state,\r\n        setCurrencyRates,\r\n        setSelectedCurrency,\r\n      }}\r\n    >\r\n      {children}\r\n    </CurrencyContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CurrencyContextProvider;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITransactionPagination } from '../models';\r\n\r\nconst SButtonList = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style-type: none;\r\n`;\r\n\r\nconst Paginataion: FC<ITransactionPagination> = ({ totalTransactions, transactionsPerPage, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalTransactions / transactionsPerPage); i += 1) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <SButtonList>\r\n        {pageNumbers.map((number) => (\r\n          <li key={number}>\r\n            <button onClick={() => paginate(number)} type=\"button\">\r\n              {number}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </SButtonList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginataion;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITypographyProps } from '../../../models';\r\nimport { fontSize } from '../../../style/theme/theme';\r\n\r\nconst setfontSize = (size?: fontSize) => {\r\n  switch (size) {\r\n    case fontSize.heading1:\r\n      return `\r\n        font-size:2.125rem;\r\n        `;\r\n\r\n    case fontSize.heading2:\r\n      return `\r\n      font-size:1.5rem;\r\n      `;\r\n\r\n    case fontSize.heading3:\r\n      return `\r\n      font-size:1.25rem;\r\n      `;\r\n\r\n    case fontSize.caption:\r\n      return `\r\n      font-size:1rem;`;\r\n\r\n    case fontSize.subtitle:\r\n      return `\r\n      font-size:0.875rem;`;\r\n\r\n    case fontSize.subtitle2:\r\n      return `\r\n      font-size:11px;`;\r\n\r\n    default:\r\n      return fontSize.caption;\r\n  }\r\n};\r\n\r\nconst STypography = styled.label<ITypographyProps>`\r\n  ${({ fontsize }) => setfontSize(fontsize)};\r\n  ${({ color }) => `color:${color};`}\r\n  ${({ bold }) => (bold ? `font-weight:bold` : `font-weight:normal`)}\r\n`;\r\n\r\nconst Typography: React.FC<ITypographyProps> = ({ fontsize, children, color, bold }) => (\r\n  <STypography fontsize={fontsize} color={color} bold={bold}>\r\n    {children}\r\n  </STypography>\r\n);\r\nexport default Typography;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITransactionCardProps } from '../../../models/index';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport { colors, fontSize } from '../../../style/theme/theme';\r\n\r\nconst STransactionCardContainer = styled.div`\r\n  border-radius: 10px;\r\n  height: 250px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  box-shadow: rgba(99, 99, 99, 0.4) 0px 2px 8px 0px;\r\n  position: relative;\r\n`;\r\n\r\nconst SDetailsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst STitleWrapper = styled.div`\r\n  margin-block: auto;\r\n`;\r\n\r\nconst TransactionCard: FC<ITransactionCardProps> = ({\r\n  paymentType,\r\n  paymentMethod,\r\n  cancelled,\r\n  time,\r\n  date,\r\n  currency,\r\n  category,\r\n  company,\r\n  amount,\r\n  location,\r\n}) => (\r\n  <STransactionCardContainer>\r\n    <STitleWrapper>\r\n      <Typography fontsize={fontSize.heading3} bold>\r\n        {paymentType}\r\n      </Typography>\r\n    </STitleWrapper>\r\n    <SDetailsWrapper>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Payment Method : {paymentMethod}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Cancelled : {cancelled}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Amount : {amount}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Time : {time}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Date: {date}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Currency: {currency}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Category : {category}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Company : {company}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Country: {location.country}\r\n      </Typography>\r\n    </SDetailsWrapper>\r\n  </STransactionCardContainer>\r\n);\r\n\r\nexport default TransactionCard;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ITransactionsListProps } from '../../../models';\r\nimport TransactionCard from '../../molecules/TransactionCard/TransactionCard';\r\n\r\nconst TransactionsListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 2fr);\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 15px;\r\n  grid-row-gap: 15px;\r\n`;\r\n\r\nconst TransactionsList: FC<ITransactionsListProps> = ({ transactions }) => (\r\n  <TransactionsListWrapper>\r\n    {transactions?.map(\r\n      ({ paymentType, paymentMethod, cancelled, time, date, currency, category, company, amount, location }) => (\r\n        <TransactionCard\r\n          paymentType={paymentType}\r\n          paymentMethod={paymentMethod}\r\n          cancelled={cancelled}\r\n          time={time}\r\n          date={date}\r\n          currency={currency}\r\n          category={category}\r\n          company={company}\r\n          amount={amount}\r\n          location={location}\r\n        />\r\n      )\r\n    )}\r\n  </TransactionsListWrapper>\r\n);\r\n\r\nexport default TransactionsList;\r\n","import { TransactionsFileds } from '../enums';\r\nimport { ITransaction } from '../models';\r\n\r\nconst options = [\r\n  { value: 'paymentType', displayName: 'Payment Type' },\r\n  { value: 'paymentMethod', displayName: 'Payment Method ' },\r\n  { value: 'amount', displayName: 'Amount' },\r\n  { value: 'time', displayName: 'Time' },\r\n  { value: 'date', displayName: 'Date' },\r\n  { value: 'currency', displayName: 'Currency' },\r\n];\r\n\r\nconst sort = (value: any, transactions: ITransaction[]) => {\r\n  const key: TransactionsFileds = value;\r\n  const sortedTransactions = transactions.sort((a, b) => {\r\n    const valueA = a[key];\r\n    const valueB = b[key];\r\n    if (valueA < valueB) {\r\n      return -1;\r\n    }\r\n    if (valueA > valueB) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return sortedTransactions;\r\n};\r\n\r\nexport { sort, options };\r\n","import React, { FC, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Pagination from '../../../helpers/Pagination';\r\nimport TransactionsList from '../../../components/organisms/TransactionsList/TransactionsList';\r\nimport { TransactionsContext } from '../../../constexts/transactionsContext';\r\nimport { sort, options } from '../../../helpers/SortAndFilter';\r\n\r\nconst STransactionsPageContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\nconst SSelect = styled.select`\r\n  padding: 5px;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SFiltersWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Transactions: FC = () => {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  const [sorted, setSorted] = useState(transactions);\r\n  const [filterByAmount, setFilterByAmount] = useState(0);\r\n  const tempTransactions = [...transactions];\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [transactionsPerPage] = useState(4);\r\n  const indexOfLastTransactions = currentPage * transactionsPerPage;\r\n  const indexOfFirstTransactions = indexOfLastTransactions - transactionsPerPage;\r\n  const currentTrasactions = sorted.slice(indexOfFirstTransactions, indexOfLastTransactions);\r\n\r\n  const filterTransactions = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const key = e.target.value;\r\n    const filteredTransactions = tempTransactions.filter(({ amount }) => amount >= +key);\r\n    setFilterByAmount(+key);\r\n    setSorted(filteredTransactions);\r\n  };\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = e.target;\r\n    const sortTrnsactions = sort(value, tempTransactions);\r\n    setSorted(sortTrnsactions);\r\n  };\r\n\r\n  const paginate = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <STransactionsPageContainer>\r\n      <SFiltersWrapper>\r\n        <SSelect defaultValue=\"SortBy\" onChange={onChange}>\r\n          <option disabled value=\"SortBy\">\r\n            Sort By\r\n          </option>\r\n          {options?.map(({ value, displayName }) => (\r\n            <option value={value}>{displayName}</option>\r\n          ))}\r\n        </SSelect>\r\n        <input type=\"range\" onChange={filterTransactions} min={0} max={1500} step={50} />\r\n      </SFiltersWrapper>\r\n      <p>Amount: {filterByAmount}</p>\r\n      <TransactionsList transactions={currentTrasactions} />\r\n      <Pagination paginate={paginate} transactionsPerPage={transactionsPerPage} totalTransactions={sorted.length} />\r\n    </STransactionsPageContainer>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n","import React, { FC } from 'react';\r\n\r\nconst Cards: FC = () => (\r\n  <div>\r\n    <h1>Cards Page</h1>\r\n  </div>\r\n);\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\n\r\nconst PolarChart = () => {\r\n  const PolarChartObj = {\r\n    series: [14, 23, 21, 17, 15, 10, 12, 17, 21],\r\n    options: {\r\n      chart: {\r\n        type: 'polarArea',\r\n      },\r\n      stroke: {\r\n        colors: ['#fff'],\r\n      },\r\n      fill: {\r\n        opacity: 0.8,\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: 'bottom',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <div id=\"chart\">\r\n      <ApexCharts options={PolarChartObj.options} series={PolarChartObj.series} type=\"polarArea\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PolarChart;\r\n","import React, { useContext } from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\nimport { TransactionsContext } from '../../constexts/transactionsContext';\r\nimport { ITransaction } from '../../models';\r\n\r\nconst PieChart = () => {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  const chartData = transactions.reduce((preValue: any, currentValue) => {\r\n    const previous = preValue;\r\n    const index = previous.findIndex((item: any) => item.paymentMethod === currentValue.paymentMethod);\r\n    if (index === -1) {\r\n      previous.push(currentValue);\r\n    } else {\r\n      previous[index].amount += currentValue.amount;\r\n    }\r\n    return previous;\r\n  }, []);\r\n\r\n  console.log('chart Data:', chartData);\r\n  const PieChartObj = {\r\n    options: {\r\n      series: chartData.map((item: ITransaction) => item.amount),\r\n      labels: chartData.map((item: ITransaction) => item.paymentMethod),\r\n\r\n      chart: {\r\n        type: 'donut',\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: 'bottom',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ApexCharts options={PieChartObj.options} series={PieChartObj.options.series} type=\"donut\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport PolarChart from '../../../constants/charts/PolarChart/PolarChart';\r\nimport PieChart from '../../../constants/PieChart/PieChart';\r\n\r\nconst SChartsPageContainer = styled.div`\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\nconst SPieChartBox = styled.div`\r\n  height: 50%;\r\n  width: 50%;\r\n`;\r\nconst SPolarChartBox = styled.div`\r\n  height: 50%;\r\n  width: 50%;\r\n`;\r\n\r\nconst Charts: FC = () => (\r\n  <SChartsPageContainer>\r\n    <SPieChartBox>\r\n      <PieChart />\r\n    </SPieChartBox>\r\n    <SPolarChartBox>\r\n      <PolarChart />\r\n    </SPolarChartBox>\r\n  </SChartsPageContainer>\r\n);\r\n\r\nexport default Charts;\r\n","import axios from 'axios';\r\nimport { IUser, ITransaction } from '../models/index';\r\n\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\n\r\nclass BudgetServiceApi {\r\n  axiosInstance = axios.create({\r\n    baseURL,\r\n  });\r\n\r\n  getCurrency = async (currencyCode: string) => {\r\n    try {\r\n      const currencies = await axios.get(\r\n        ` https://v6.exchangerate-api.com/v6/6eec34279d4900b11c746caf/latest/${currencyCode}`\r\n      );\r\n      return currencies.data;\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  createUser = async (userPayload: IUser) => {\r\n    try {\r\n      await this.axiosInstance.post(`users/register/`, userPayload);\r\n      return { msg: 'User Created successfully' };\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  getUser = async (id: string) => {\r\n    try {\r\n      const user = await this.axiosInstance.get(`users/${id}`);\r\n      return user.data;\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  updateUser = async (id: string, userPayload: IUser) => {\r\n    try {\r\n      await this.axiosInstance.put(`users/${id}`, userPayload);\r\n      return { msg: 'User Updated successfully' };\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  deleteUser = async (id: string) => {\r\n    try {\r\n      await this.axiosInstance.delete(`users/${id}`);\r\n      return { msg: 'User Deleted successfully' };\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  getAllTransactions = async () => {\r\n    try {\r\n      const transactions = await this.axiosInstance.get(`transactions/all`);\r\n      return transactions.data;\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  getLatestTransactionsByLimit = async (limit: number) => {\r\n    try {\r\n      const transactions = await this.axiosInstance.get(`transactions/latest?limit=${limit}`);\r\n      return transactions.data;\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  updateTransaction = async (id: string, transactionPayload: ITransaction) => {\r\n    try {\r\n      await this.axiosInstance.put(`transactions/${id}`, transactionPayload);\r\n      return { msg: 'Transaction Updated successfully' };\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  deleteTransaction = async (id: string) => {\r\n    try {\r\n      await this.axiosInstance.delete(`transactions/${id}`);\r\n      return { msg: 'Transaction Deleted successfully' };\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n\r\n  createTransaction = async (transactionPayload: ITransaction) => {\r\n    try {\r\n      await this.axiosInstance.post(`transactions/`, transactionPayload);\r\n      return { msg: 'Transaction Created successfully' };\r\n    } catch (err) {\r\n      console.error('An error has occurred : ', err.message);\r\n      throw new Error(err);\r\n    }\r\n  };\r\n}\r\n\r\nexport default new BudgetServiceApi();\r\n","import { faThLarge, faExchangeAlt, faChartPie, faCreditCard } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\r\nimport { colors } from '../style/theme/theme';\r\nimport { NAV_GROUPE_LABEL, NAV_GROUPE_ROUTE } from '../enums';\r\n\r\nconst navGroup = [\r\n  {\r\n    icon: faThLarge,\r\n    label: NAV_GROUPE_LABEL.DASHBOARD,\r\n    route: NAV_GROUPE_ROUTE.DASHBOARD,\r\n    id: 1,\r\n    color: colors.default,\r\n  },\r\n  {\r\n    icon: faExchangeAlt,\r\n    label: NAV_GROUPE_LABEL.TRANSACTIONS,\r\n    route: NAV_GROUPE_ROUTE.TRANSACTIONS,\r\n    id: 2,\r\n    color: colors.default,\r\n  },\r\n  {\r\n    icon: faChartPie,\r\n    label: NAV_GROUPE_LABEL.CHARTS,\r\n    route: NAV_GROUPE_ROUTE.CHARTS,\r\n    id: 3,\r\n    color: colors.default,\r\n  },\r\n  {\r\n    icon: faCreditCard,\r\n    label: NAV_GROUPE_LABEL.CARDS,\r\n    route: NAV_GROUPE_ROUTE.CARDS,\r\n    id: 4,\r\n    color: colors.default,\r\n  },\r\n  {\r\n    icon: faUser,\r\n    label: NAV_GROUPE_LABEL.USER_PROFILE,\r\n    route: NAV_GROUPE_ROUTE.USER_PROFILE,\r\n    id: 5,\r\n    color: colors.default,\r\n  },\r\n];\r\n\r\nexport default navGroup;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { IListItemProps } from '../../../models/index';\r\n\r\nconst ListItemWrapper = styled.li`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 5px 0;\r\n  margin: 5px 3px;\r\n  & :nth-child(3) {\r\n    margin-left: auto;\r\n    text-align: right;\r\n  }\r\n`;\r\nconst ListItem: FC<IListItemProps> = ({ children }) => <ListItemWrapper>{children}</ListItemWrapper>;\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { IIconProps } from '../../../models';\r\nimport { IconSize } from '../../../enums';\r\n\r\nconst setSize = (size?: IconSize) => {\r\n  switch (size) {\r\n    case IconSize.Xlarge:\r\n      return `\r\n      font-size: 40px;\r\n      `;\r\n\r\n    case IconSize.large:\r\n      return `\r\n      font-size: 30px;\r\n      `;\r\n\r\n    case IconSize.medium:\r\n      return `\r\n      font-size: 20px;\r\n      `;\r\n\r\n    case IconSize.small:\r\n      return `\r\n      font-size: 15px;\r\n      `;\r\n\r\n    default:\r\n      return 'margin: 10px';\r\n  }\r\n};\r\n\r\nconst SIcon = styled.div<IIconProps>`\r\n  border-radius: 50px;\r\n  margin: 0 5px;\r\n  padding: 0 5px;\r\n  ${({ size }) => setSize(size)};\r\n  ${({ backgroundColor }) => `background-color:${backgroundColor};`};\r\n`;\r\n\r\nconst Icon: React.FC<IIconProps> = ({ size, children, backgroundColor }) => (\r\n  <SIcon size={size} backgroundColor={backgroundColor}>\r\n    {children}\r\n  </SIcon>\r\n);\r\n\r\nexport default Icon;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport navGroup from '../../../constants/NavGroup';\r\nimport ListItem from '../../molecules/ListItem/ListItem';\r\nimport Icon from '../../atoms/Icon/Icon';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport { IconSize } from '../../../enums/index';\r\nimport { colors, fontSize } from '../../../style/theme/theme';\r\n\r\nconst NavListWrapper = styled.ul`\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n`;\r\n\r\nconst NavList: FC = () => (\r\n  <NavListWrapper>\r\n    {navGroup.map(({ id, icon, color, label, route }) => (\r\n      <Link key={id} to={route}>\r\n        <ListItem>\r\n          <Icon size={IconSize.medium}>\r\n            <FontAwesomeIcon icon={icon} color={color} />\r\n          </Icon>\r\n          <Typography fontsize={fontSize.caption} color={colors.default}>\r\n            {label}\r\n          </Typography>\r\n        </ListItem>\r\n      </Link>\r\n    ))}\r\n  </NavListWrapper>\r\n);\r\n\r\nexport default NavList;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport { ICurrentBalanceProps } from '../../../models/index';\r\nimport { colors, fontSize } from '../../../style/theme/theme';\r\n\r\nexport const SCurrentBalanceWrapper = styled.div`\r\n  height: 120px;\r\n  width: 150px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  margin: 0 auto 40px;\r\n`;\r\n\r\nconst SCaptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 5px 0;\r\n`;\r\n\r\nconst CurrentBalance: FC<ICurrentBalanceProps> = ({ currentBalance }) => (\r\n  <SCurrentBalanceWrapper>\r\n    <SCaptionWrapper>\r\n      <Typography fontsize={fontSize.heading1} color={colors.default} bold>\r\n        {currentBalance}\r\n      </Typography>\r\n    </SCaptionWrapper>\r\n    <SCaptionWrapper>\r\n      <Typography fontsize={fontSize.caption} color={colors.default}>\r\n        Current balance\r\n      </Typography>\r\n    </SCaptionWrapper>\r\n  </SCurrentBalanceWrapper>\r\n);\r\n\r\nexport default CurrentBalance;\r\n","import React, { FC, useContext } from 'react';\r\nimport { CurrencyContext } from '../../../constexts/currencyContext';\r\nimport { ICurrencyRowProps } from '../../../models';\r\n\r\nconst CurrencyRow: FC<ICurrencyRowProps> = () => {\r\n  const { setSelectedCurrency, currencyRates } = useContext(CurrencyContext);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const { value } = e.target;\r\n    setSelectedCurrency(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={onChange}>\r\n        {Object.keys(currencyRates).map((option: string) => (\r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyRow;\r\n","import React, { FC, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport NavList from '../NavList/NavList';\r\nimport CurrentBalance from '../../molecules/CurrentBalance/CurrentBalance';\r\nimport { colors, breakPoints } from '../../../style/theme/theme';\r\nimport { UserContext } from '../../../constexts/userContext';\r\nimport CurrencyRow from '../../molecules/CurrencyRow/CurrencyRow';\r\n\r\ninterface IIsshowProps {\r\n  isShow?: boolean;\r\n}\r\nconst SNavBarWrapper = styled.div<IIsshowProps>(\r\n  ({ isShow }) => `\r\n  background-color: ${colors.blue.dark};\r\n  width: 200px;\r\n  padding: 40px 10px;\r\n  @media (max-width: ${breakPoints.laptop}) {\r\n    position: absolute;\r\n    left: ${isShow ? 0 : `-220px`} ;\r\n    transition: 0.3s left;\r\n    height:100%;\r\n    z-index:1000;\r\n  }\r\n`\r\n);\r\n\r\nconst SmenuIconWrapper = styled.div`\r\n  display: none;\r\n  @media (max-width: ${breakPoints.laptop}) {\r\n    position: absolute;\r\n    left: 35px;\r\n    top: 20px;\r\n    display: block;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NavBar: FC = () => {\r\n  const { user } = useContext(UserContext);\r\n  const [isShow, setIsShow] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <SmenuIconWrapper onClick={() => setIsShow(true)}>\r\n        <FontAwesomeIcon icon={faBars} color={colors.grey.primary} />\r\n      </SmenuIconWrapper>\r\n      <SNavBarWrapper isShow={isShow}>\r\n        <CurrentBalance currentBalance={user.currentBalance} />\r\n        <NavList />\r\n        <CurrencyRow onChange={() => {}} />\r\n      </SNavBarWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\r\nimport { IBriefCardProps } from '../../../models/index';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport { colors, fontSize } from '../../../style/theme/theme';\r\n\r\nconst SBriefCardContainer = styled.div`\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 150px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n`;\r\n\r\nconst SRevenueWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst SProfitBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst SProfitCaptionWrapper = styled.div`\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst SMenuIconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 10px;\r\n`;\r\n\r\nconst SCardIconWrapper = styled.div<IBriefCardProps>(\r\n  ({ backgroundColor }) => `\r\n  background-color:${backgroundColor};\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  right: 10px;\r\n  bottom: 10px;\r\n`\r\n);\r\n\r\nconst BriefCard: FC<IBriefCardProps> = ({ title, profit, revenue, backgroundColor, icon, color }) => (\r\n  <SBriefCardContainer>\r\n    <Typography fontsize={fontSize.heading2} bold>\r\n      {title}\r\n    </Typography>\r\n    <SRevenueWrapper>\r\n      <Typography fontsize={fontSize.caption} color={colors.grey.primary}>\r\n        Revenue\r\n      </Typography>\r\n      <Typography fontsize={fontSize.heading2} color={colors.blue.lightblue}>\r\n        {revenue}\r\n      </Typography>\r\n    </SRevenueWrapper>\r\n    <SProfitBox>\r\n      <Typography fontsize={fontSize.subtitle}>{profit}</Typography>\r\n      <SProfitCaptionWrapper>\r\n        <Typography fontsize={fontSize.subtitle} color={colors.grey.primary}>\r\n          Since last month\r\n        </Typography>\r\n      </SProfitCaptionWrapper>\r\n    </SProfitBox>\r\n    <SMenuIconWrapper>\r\n      <FontAwesomeIcon icon={faEllipsisH} color={colors.grey.primary} />\r\n    </SMenuIconWrapper>\r\n    <SCardIconWrapper backgroundColor={backgroundColor}>\r\n      <FontAwesomeIcon icon={icon} color={color} />\r\n    </SCardIconWrapper>\r\n  </SBriefCardContainer>\r\n);\r\n\r\nexport default BriefCard;\r\n","export default __webpack_public_path__ + \"static/media/CreditCardBackground.3b32bef8.png\";","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ICreditCardProps } from '../../../models/index';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport CreditCardBackground from '../../../assets/images/CreditCardBackground.png';\r\nimport { colors, fontSize } from '../../../style/theme/theme';\r\n\r\nconst SCreditCardContainer = styled.div`\r\n  background-image: url(${CreditCardBackground});\r\n  background-size: cover;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 206px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 12px 12px;\r\n  box-sizing: border-box;\r\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst SDigitsWrapper = styled.div`\r\n  margin-top: 20px;\r\n  word-spacing: 5px;\r\n  letter-spacing: 2px;\r\n`;\r\n\r\nconst SCardHolderWrapper = styled.div``;\r\n\r\nconst SCardExpDateWrapper = styled.div``;\r\n\r\nconst SCardDataBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-bottom: 2px;\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n`;\r\nconst CreditCard: FC<ICreditCardProps> = ({ firstName, lastName, last4Digits, expMonth, expYear }) => (\r\n  <SCreditCardContainer>\r\n    <Typography fontsize={fontSize.heading2} color={colors.default} bold>\r\n      Card\r\n    </Typography>\r\n    <SDigitsWrapper>\r\n      <Typography fontsize={fontSize.heading3} color={colors.default}>\r\n        {`**** **** **** ${last4Digits}`}\r\n      </Typography>\r\n    </SDigitsWrapper>\r\n    <SCardDataBox>\r\n      <SCardHolderWrapper>\r\n        <Typography fontsize={fontSize.subtitle} color={colors.white.medium}>\r\n          CARD HOLDER\r\n        </Typography>\r\n        <Typography fontsize={fontSize.caption} color={colors.default}>\r\n          {`${firstName}${' '}${lastName}`}\r\n        </Typography>\r\n      </SCardHolderWrapper>\r\n      <SCardExpDateWrapper>\r\n        <Typography fontsize={fontSize.subtitle} color={colors.white.medium}>\r\n          VALID THRU\r\n        </Typography>\r\n        <Typography fontsize={fontSize.caption} color={colors.default}>\r\n          {`${expMonth} / ${expYear}`}\r\n        </Typography>\r\n      </SCardExpDateWrapper>\r\n    </SCardDataBox>\r\n  </SCreditCardContainer>\r\n);\r\n\r\nexport default CreditCard;\r\n","import { ITransaction } from '../models/index';\r\n\r\nexport const getTotalAmountPerMonthByType = (transactions: ITransaction[], type: string) => {\r\n  const dateObj: any = {};\r\n\r\n  transactions.forEach((transaction: ITransaction) => {\r\n    const date = new Date(transaction.date).toLocaleString('default', { month: 'short' });\r\n\r\n    if (transaction.paymentType === type) {\r\n      if (!dateObj[date]) {\r\n        dateObj[date] = transaction.amount;\r\n      } else {\r\n        dateObj[date] += transaction.amount;\r\n      }\r\n    }\r\n  });\r\n\r\n  const dateObjArray = Object.entries(dateObj).map(([month, totalAmountPerMonth]) => ({\r\n    x: month,\r\n    y: totalAmountPerMonth,\r\n  }));\r\n\r\n  const lastSixMonths = 6;\r\n  const incomesData = dateObjArray.slice(-lastSixMonths);\r\n  return incomesData;\r\n};\r\n\r\nconst getAverage = (transactions: ITransaction[], currencyRates: any) => {\r\n  let total = 0;\r\n\r\n  transactions.forEach((transaction: ITransaction) => {\r\n    total += transaction.amount / currencyRates[transaction.currency];\r\n  });\r\n\r\n  const average = total / transactions.length;\r\n  return average.toFixed(2);\r\n};\r\n\r\nexport default getAverage;\r\n","import React, { useContext } from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\nimport { TransactionsContext } from '../../../constexts/transactionsContext';\r\nimport { colors } from '../../../style/theme/theme';\r\nimport { getTotalAmountPerMonthByType } from '../../../helpers/mathFuncs';\r\n\r\nconst IncomeChart = () => {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  const incomesData = getTotalAmountPerMonthByType(transactions, 'Income');\r\n\r\n  const chartObj = {\r\n    series: [\r\n      {\r\n        name: 'Desktops',\r\n        data: incomesData,\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        height: 350,\r\n        width: '100%',\r\n        type: 'line',\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n      },\r\n      title: {\r\n        text: 'Income',\r\n        align: 'left',\r\n      },\r\n      grid: {\r\n        row: {\r\n          colors: [colors.white.whiteSmoke, 'transparent'],\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ApexCharts options={chartObj.options} series={chartObj.series} type=\"line\" height={190} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeChart;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport Incomechart from '../../../constants/charts/IncomeChart/IncomeChart';\r\n\r\nconst SIncomeChartWrapper = styled.div`\r\n  width: 344px;\r\n  height: 206px;\r\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst IncomeChart: FC = () => (\r\n  <SIncomeChartWrapper>\r\n    <Incomechart />\r\n  </SIncomeChartWrapper>\r\n);\r\n\r\nexport default IncomeChart;\r\n","import React, { useContext } from 'react';\r\nimport ApexCharts from 'react-apexcharts';\r\nimport { TransactionsContext } from '../../../constexts/transactionsContext';\r\nimport { colors } from '../../../style/theme/theme';\r\nimport { CHARTS_NAMES } from '../../../enums/index';\r\nimport { getTotalAmountPerMonthByType } from '../../../helpers/mathFuncs';\r\n\r\nconst ActivityChart = () => {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  const incomesData = getTotalAmountPerMonthByType(transactions, 'Income');\r\n  const expensesData = getTotalAmountPerMonthByType(transactions, 'Expenses');\r\n\r\n  const chartObj = {\r\n    series: [\r\n      {\r\n        name: CHARTS_NAMES.Income,\r\n        data: incomesData,\r\n      },\r\n      {\r\n        name: CHARTS_NAMES.Expenses,\r\n        data: expensesData,\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: 'bar',\r\n        height: 350,\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: '30%',\r\n          endingShape: 'rounded',\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      title: {\r\n        text: 'Activities',\r\n        align: 'left',\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent'],\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n      colors: [colors.blue.dark, colors.pink.primary],\r\n      tooltip: {\r\n        y: {\r\n          formatter: {\r\n            function(val: any) {\r\n              return `$ ${val}`;\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div id=\"chart\">\r\n      <ApexCharts options={chartObj.options} series={chartObj.series} type=\"bar\" height={350} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityChart;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport Activitychart from '../../../constants/charts/ActivityChart/ActivityChart';\r\n\r\nconst SActivityChartWrapper = styled.div`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst ActivityChart: FC = () => (\r\n  <SActivityChartWrapper>\r\n    <Activitychart />\r\n  </SActivityChartWrapper>\r\n);\r\n\r\nexport default ActivityChart;\r\n","import React, { FC, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { faArchive, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { TransactionsContext } from '../../../constexts/transactionsContext';\r\nimport BriefCard from '../../../components/molecules/BriefCard/BriefCard';\r\nimport CreditCard from '../../../components/molecules/CreditCard/CreditCard';\r\nimport IncomeChart from '../../../components/molecules/IncomeChart/IncomeChart';\r\nimport ActivityChart from '../../../components/molecules/ActivityChart/ActivityChart';\r\nimport { colors, breakPoints } from '../../../style/theme/theme';\r\nimport getAverage from '../../../helpers/mathFuncs';\r\nimport { UserContext } from '../../../constexts/userContext';\r\nimport { CurrencyContext } from '../../../constexts/currencyContext';\r\n\r\nconst SMainContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst SFlexWrapper = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  flex-grow: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  @media (max-width: ${breakPoints.desktop}) {\r\n    width: 50%;\r\n  }\r\n  @media (max-width: ${breakPoints.laptop}) {\r\n    width: 50%;\r\n  }\r\n  @media (max-width: ${breakPoints.tablet}) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Dashboard: FC = () => {\r\n  const { user } = useContext(UserContext);\r\n  const { creditCard, firstName, lastName } = user;\r\n  const { transactions } = useContext(TransactionsContext);\r\n  const { currencyRates } = useContext(CurrencyContext);\r\n  const { last4Digits, expMonth, expYear } = creditCard[0];\r\n\r\n  const incomes = transactions.filter((t) => t.paymentType === 'Income');\r\n  const expenses = transactions.filter((t) => t.paymentType === 'Expenses');\r\n\r\n  return (\r\n    <SMainContainer>\r\n      <SFlexWrapper>\r\n        <CreditCard\r\n          firstName={firstName}\r\n          lastName={lastName}\r\n          last4Digits={last4Digits}\r\n          expMonth={expMonth}\r\n          expYear={expYear}\r\n        />\r\n      </SFlexWrapper>\r\n      <SFlexWrapper>\r\n        <IncomeChart />\r\n      </SFlexWrapper>\r\n      <SFlexWrapper>\r\n        <BriefCard\r\n          title=\"Income\"\r\n          revenue={getAverage(incomes, currencyRates)}\r\n          profit=\"+5.08%\"\r\n          backgroundColor={colors.blue.medium}\r\n          color={colors.default}\r\n          icon={faArchive}\r\n        />\r\n      </SFlexWrapper>\r\n      <SFlexWrapper>\r\n        <BriefCard\r\n          title=\"Expenses\"\r\n          revenue={getAverage(expenses, currencyRates)}\r\n          profit=\"+5.08%\"\r\n          backgroundColor={colors.blue.medium}\r\n          color={colors.default}\r\n          icon={faChartLine}\r\n        />\r\n      </SFlexWrapper>\r\n      <ActivityChart />\r\n    </SMainContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AvatarSize } from '../../../enums/index';\r\nimport { IAvatarProps } from '../../../models/index';\r\n\r\nconst setAvatarSize = (size?: AvatarSize) => {\r\n  switch (size) {\r\n    case AvatarSize.xl:\r\n      return `\r\n        width: 70px;\r\n        height:70px;\r\n        `;\r\n\r\n    case AvatarSize.lg:\r\n      return `\r\n        width: 60px;\r\n        height: 60px;\r\n        `;\r\n\r\n    case AvatarSize.md:\r\n      return `\r\n        width: 50px;\r\n        height:50px;\r\n        `;\r\n\r\n    case AvatarSize.sm:\r\n      return `\r\n        width:40px;\r\n        height:40px;\r\n        `;\r\n\r\n    case AvatarSize.xs:\r\n      return `\r\n        width: 30px;\r\n        height:30px;\r\n        `;\r\n\r\n    default:\r\n      return ` \r\n        width: 40px;\r\n        height:40px;\r\n        `;\r\n  }\r\n};\r\n\r\nconst SAvatar = styled.img<IAvatarProps>`\r\n  border-radius: 50px;\r\n  ${({ size }) => setAvatarSize(size)};\r\n`;\r\n\r\nconst Avatar: React.FC<IAvatarProps> = ({ size = AvatarSize.md, src }) => (\r\n  <SAvatar size={size} src={src} alt=\"avatar\" />\r\n);\r\n\r\nexport default Avatar;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AvatarSize } from '../../../enums';\r\nimport { IUserDetailsProps } from '../../../models/index';\r\nimport { colors, fontSize } from '../../../style/theme/theme';\r\nimport Avatar from '../../atoms/Avatar/Avatar';\r\nimport Typography from '../../atoms/Typography/Typography';\r\n\r\nconst SUserDetailsContainer = styled.div`\r\n  height: 135px;\r\n  width: 150px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border-radius: 15px;\r\n  padding: 10px;\r\n  margin: 0 auto 40px;\r\n`;\r\n\r\nconst SCaptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst UserDetails: FC<IUserDetailsProps> = ({ firstName, lastName, email, avatar }) => (\r\n  <SUserDetailsContainer>\r\n    <Avatar size={AvatarSize.xl} src={avatar} />\r\n    <SCaptionWrapper>\r\n      <Typography fontsize={fontSize.heading3} bold>\r\n        {`${firstName}${' '}${lastName}`}\r\n      </Typography>\r\n      <Typography fontsize={fontSize.subtitle} color={colors.grey.primary}>\r\n        {email}\r\n      </Typography>\r\n    </SCaptionWrapper>\r\n  </SUserDetailsContainer>\r\n);\r\n\r\nexport default UserDetails;\r\n","import { colors } from '../style/theme/theme';\r\n\r\nexport const getAmountColor = (amount: number) => {\r\n  if (amount === 0) return colors.black;\r\n  return amount > 0 ? colors.purple : colors.blue.lightblue;\r\n};\r\n\r\nexport const getAmountSymbol = (amount: number) => (amount > 0 ? `+${amount.toFixed(2)}` : `${amount.toFixed(2)}`);\r\n\r\nexport const getDateFormat = (date: string, time: string) =>\r\n  new Date(date).toLocaleDateString() + new Date(time).toLocaleString();\r\n","import { faCheck, faTimes, faSyncAlt, faReply } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPaypal } from '@fortawesome/free-brands-svg-icons';\r\nimport { PAYMENT_METHOD, PAYMENT_METHOD_TEXT } from '../enums/index';\r\nimport { colors } from '../style/theme/theme';\r\n\r\nconst getStyleByPaymentMethod = (paymentMethod: string) => {\r\n  switch (paymentMethod) {\r\n    case PAYMENT_METHOD.ATM:\r\n      return {\r\n        text: PAYMENT_METHOD_TEXT.ATM,\r\n        icon: faCheck,\r\n        color: colors.default,\r\n        backgroundColor: colors.purple,\r\n      };\r\n\r\n    case PAYMENT_METHOD.CANCELLED:\r\n      return {\r\n        text: PAYMENT_METHOD_TEXT.CANCELLED,\r\n        icon: faTimes,\r\n        color: colors.default,\r\n        backgroundColor: colors.pink.primary,\r\n      };\r\n\r\n    case PAYMENT_METHOD.CYCLE:\r\n      return {\r\n        text: PAYMENT_METHOD_TEXT.CYCLE,\r\n        icon: faSyncAlt,\r\n        color: colors.black,\r\n        backgroundColor: colors.default,\r\n      };\r\n\r\n    case PAYMENT_METHOD.REFUND:\r\n      return {\r\n        text: PAYMENT_METHOD_TEXT.REFUND,\r\n        icon: faReply,\r\n        color: colors.black,\r\n        backgroundColor: colors.default,\r\n      };\r\n\r\n    case PAYMENT_METHOD.PAYPAL:\r\n      return {\r\n        text: PAYMENT_METHOD_TEXT.PAYPAL,\r\n        icon: faPaypal,\r\n        color: colors.default,\r\n        backgroundColor: colors.purple,\r\n      };\r\n    default:\r\n      return {\r\n        text: ' Withdrawals from Credit Card',\r\n        icon: faCheck,\r\n        color: colors.default,\r\n        backgroundColor: colors.purple,\r\n      };\r\n  }\r\n};\r\n\r\nexport default getStyleByPaymentMethod;\r\n","import React, { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport { IListItemTextProps } from '../../../models/index';\r\nimport { colors, fontSize } from '../../../style/theme/theme';\r\n\r\nconst SListItemTextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2px;\r\n  margin: 5px 2px;\r\n`;\r\n\r\nconst ListItemText: FC<IListItemTextProps> = ({ title, subtitle, color }) => (\r\n  <SListItemTextWrapper>\r\n    <Typography bold color={color} fontsize={fontSize.subtitle2}>\r\n      {title}\r\n    </Typography>\r\n    <Typography fontsize={fontSize.subtitle2} color={colors.grey.primary}>\r\n      {subtitle}\r\n    </Typography>\r\n  </SListItemTextWrapper>\r\n);\r\n\r\nexport default ListItemText;\r\n","import React, { FC, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { TransactionsContext } from '../../../constexts/transactionsContext';\r\nimport { IPaymentListProps } from '../../../models/index';\r\nimport { getAmountColor, getAmountSymbol, getDateFormat } from '../../../helpers/designFuncs';\r\nimport getStyleByPaymentMethod from '../../../constants/PayGroup';\r\nimport ListItem from '../../molecules/ListItem/ListItem';\r\nimport ListItemText from '../../molecules/ListItemText/ListItemText';\r\nimport { CurrencyContext } from '../../../constexts/currencyContext';\r\n\r\nconst PaymentListWrapper = styled.ul`\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  margin: 0;\r\n`;\r\n\r\nconst SIconWrapper = styled.div<IPaymentListProps>(\r\n  ({ iconBackground }) => `\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color:${iconBackground};\r\n  margin-right:5px;\r\n\r\n`\r\n);\r\n\r\nconst PaymentList: FC = () => {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  const { currencyRates, selectedCurrency } = useContext(CurrencyContext);\r\n  return (\r\n    <PaymentListWrapper>\r\n      {transactions?.map(({ paymentMethod, date, time, amount, currency }) => {\r\n        const { backgroundColor, color, text, icon } = getStyleByPaymentMethod(paymentMethod);\r\n        return (\r\n          <ListItem>\r\n            <SIconWrapper iconBackground={backgroundColor}>\r\n              <FontAwesomeIcon icon={icon} color={color} />\r\n            </SIconWrapper>\r\n            <ListItemText title={text} subtitle={getDateFormat(date, time)} />\r\n            <ListItemText\r\n              fontweight=\"bold\"\r\n              color={getAmountColor(amount)}\r\n              title={getAmountSymbol(amount / currencyRates[currency])}\r\n              subtitle={selectedCurrency}\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </PaymentListWrapper>\r\n  );\r\n};\r\n\r\nexport default PaymentList;\r\n","import React, { FC, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport UserDetails from '../../molecules/UserDetails/UserDetails';\r\nimport PaymentList from '../PaymentList/PaymentList';\r\nimport Typography from '../../atoms/Typography/Typography';\r\nimport { breakPoints, colors, fontSize } from '../../../style/theme/theme';\r\nimport { UserContext } from '../../../constexts/userContext';\r\n\r\nconst SPaymentBarContainer = styled.div`\r\n  background-color: ${colors.pink.secondery};\r\n  width: 200px;\r\n  padding: 40px 10px;\r\n  overflow-y: auto;\r\n  @media (max-width: ${breakPoints.desktop}) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst STitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 10px;\r\n`;\r\n\r\nconst PaymentBar: FC = () => {\r\n  const { user } = useContext(UserContext);\r\n  const { firstName, lastName, email, avatar } = user;\r\n  return (\r\n    <SPaymentBarContainer>\r\n      <UserDetails firstName={firstName} lastName={lastName} email={email} avatar={avatar} />\r\n      <STitleWrapper>\r\n        <Typography fontsize={fontSize.heading2} bold>\r\n          Payment History\r\n        </Typography>\r\n      </STitleWrapper>\r\n      <PaymentList />\r\n    </SPaymentBarContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentBar;\r\n","import React, { FC, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { TransactionsContext } from '../../../constexts/transactionsContext';\r\nimport { CurrencyContext } from '../../../constexts/currencyContext';\r\nimport { UserContext } from '../../../constexts/userContext';\r\nimport transactionsList from '../Transactions/Transactions';\r\nimport Cards from '../Cards/Cards';\r\nimport Charts from '../Charts/Charts';\r\nimport BudgetServiceApi from '../../../services/budgetServiceApi';\r\nimport NavBar from '../../../components/organisms/NavBar/NavBar';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport PaymentBar from '../../../components/organisms/PaymentBar/PaymentBar';\r\nimport { breakPoints } from '../../../style/theme/theme';\r\n\r\nconst SHomePageContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 4fr 1fr;\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 0px;\r\n  grid-row-gap: 0px;\r\n  width: 80%;\r\n  height: 95vh;\r\n  max-height: 95vh;\r\n  margin: 10px auto;\r\n  overflow: auto;\r\n  border-radius: 20px;\r\n  box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n  @media (max-width: ${breakPoints.XLScreen}) {\r\n    width: 95%;\r\n  }\r\n  @media (max-width: ${breakPoints.desktop}) {\r\n    grid-template-columns: 1fr 4fr;\r\n  }\r\n  @media (max-width: ${breakPoints.laptop}) {\r\n    grid-template-columns: 4fr;\r\n  }\r\n`;\r\n\r\nconst HomePage: FC = () => {\r\n  const { setTransactions } = useContext(TransactionsContext);\r\n  const { setUser } = useContext(UserContext);\r\n  const { selectedCurrency, setCurrencyRates } = useContext(CurrencyContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const transactionsData = await BudgetServiceApi.getLatestTransactionsByLimit(10);\r\n        const userData = await BudgetServiceApi.getUser('60805fac3e04b30008493f6c');\r\n\r\n        if (transactionsData?.length) {\r\n          setTransactions(transactionsData);\r\n        }\r\n        if (userData) {\r\n          setUser(userData);\r\n        }\r\n      } catch (err) {\r\n        console.error('An error has occurred : ', err.message);\r\n        throw new Error(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const currenciesData = await BudgetServiceApi.getCurrency(selectedCurrency);\r\n        setCurrencyRates(currenciesData.conversion_rates);\r\n        console.log('currenciesData : ', currenciesData);\r\n      } catch (err) {\r\n        console.error('An error has occurred : ', err.message);\r\n        throw new Error(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [selectedCurrency]);\r\n\r\n  return (\r\n    <Router>\r\n      <SHomePageContainer>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" component={Dashboard} exact />\r\n          <Route path=\"/transactions\" component={transactionsList} exact />\r\n          <Route path=\"/charts\" component={Charts} exact />\r\n          <Route path=\"/cards\" component={Cards} exact />\r\n        </Switch>\r\n        <PaymentBar />\r\n      </SHomePageContainer>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport UserContextProvider from './constexts/userContext';\r\nimport TransactionsContextProvider from './constexts/transactionsContext';\r\nimport CurrencyContextProvider from './constexts/currencyContext';\r\nimport HomePage from './views/pages/HomePage/HomePage';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <CurrencyContextProvider>\r\n      <TransactionsContextProvider>\r\n        <UserContextProvider>\r\n          <HomePage />\r\n        </UserContextProvider>\r\n      </TransactionsContextProvider>\r\n    </CurrencyContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { colors } from './style/theme/theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={colors}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}